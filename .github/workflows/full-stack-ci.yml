name: Full Stack CI/CD

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  integration-test:
    name: 🔗 Integration Tests
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: zero_hunger_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: front/package-lock.json

    - name: 🏗️ Build Backend
      run: |
        cd back
        chmod +x gradlew
        ./gradlew build --no-daemon

    - name: 🚀 Start Backend
      run: |
        cd back
        ./gradlew bootRun --no-daemon &
        echo $! > backend.pid
        sleep 30

    - name: 🏗️ Build Frontend
      run: |
        cd front
        npm ci
        npm run build

    - name: 🚀 Start Frontend
      run: |
        cd front
        npx http-server dist -p 8080 &
        echo $! > frontend.pid
        sleep 10

    - name: 🧪 Run E2E Tests
      run: |
        # Health check endpoints
        curl -f http://localhost:8080/api/products || exit 1
        curl -f http://localhost:8080 || exit 1
        echo "✅ Integration tests passed!"

    - name: 🛑 Stop services
      if: always()
      run: |
        if [ -f backend.pid ]; then kill $(cat backend.pid) || true; fi
        if [ -f frontend.pid ]; then kill $(cat frontend.pid) || true; fi

  dependency-update:
    name: 🔄 Dependency Updates
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: 🔄 Update Backend Dependencies
      run: |
        cd back
        chmod +x gradlew
        ./gradlew dependencyUpdates

    - name: 🔄 Update Frontend Dependencies
      run: |
        cd front
        npx npm-check-updates -u
        npm install

    - name: 📝 Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: update dependencies"
        title: "🔄 Automated Dependency Updates"
        body: |
          ## 🔄 Automated Dependency Updates
          
          This PR contains automated dependency updates:
          
          ### Backend (Java/Gradle)
          - Updated Gradle dependencies to latest versions
          
          ### Frontend (Node.js/npm)
          - Updated npm packages to latest versions
          
          ### ⚠️ Review Required
          Please review the changes and test thoroughly before merging.
          
          ---
          *This PR was created automatically by GitHub Actions*
        branch: chore/dependency-updates
        delete-branch: true

  performance-test:
    name: ⚡ Performance Tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: 🏗️ Build and start backend
      run: |
        cd back
        chmod +x gradlew
        ./gradlew bootRun --no-daemon &
        sleep 30

    - name: ⚡ Run performance tests with Artillery
      run: |
        npm install -g artillery
        artillery quick --count 10 --num 5 http://localhost:8080/api/products

    - name: 📊 Generate performance report
      run: |
        echo "⚡ Performance test completed"
        echo "Check the logs above for results"

  release:
    name: 🚀 Release
    runs-on: ubuntu-latest
    needs: [integration-test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: 🏷️ Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}
        release_name: Release v${{ github.run_number }}
        body: |
          ## 🚀 Release v${{ github.run_number }}
          
          ### ✨ What's New
          - Automated release from commit ${{ github.sha }}
          - All tests passed ✅
          - Ready for production 🎉
          
          ### 📦 Artifacts
          - Backend JAR file
          - Frontend build files
          - Docker images available
          
          ### 🔗 Links
          - [Backend Docker Image](https://hub.docker.com/r/your-username/izero-hunger-backend)
          - [Frontend Docker Image](https://hub.docker.com/r/your-username/izero-hunger-frontend)
        draft: false
        prerelease: false
