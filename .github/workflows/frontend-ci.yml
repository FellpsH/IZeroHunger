name: Frontend CI/CD

on:
  push:
    branches: [ main, master, develop ]
    paths:
      - 'front/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'front/**'

jobs:
  test:
    name: 🧪 Tests & Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🟢 Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: front/package-lock.json

    - name: 📦 Install dependencies
      run: |
        cd front
        npm ci

    - name: 🔍 Run ESLint
      run: |
        cd front
        npm run lint

    - name: 🧪 Run tests (if available)
      run: |
        cd front
        # npm run test:unit || echo "No tests configured"
        echo "✅ Frontend tests would run here"

    - name: 🏗️ Build for production
      run: |
        cd front
        npm run build

    - name: 📊 Check bundle size
      run: |
        cd front
        du -sh dist/
        echo "📦 Build completed successfully!"

    - name: 🏷️ Upload build artifacts
      if: success() && matrix.node-version == '20.x'
      uses: actions/upload-artifact@v4
      with:
        name: frontend-dist
        path: front/dist/
        retention-days: 30

  lighthouse:
    name: 🔍 Lighthouse Audit
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: front/package-lock.json

    - name: 📦 Install dependencies
      run: |
        cd front
        npm ci

    - name: 🏗️ Build application
      run: |
        cd front
        npm run build

    - name: 🚀 Serve application
      run: |
        cd front
        npx http-server dist -p 8080 &
        sleep 5
      
    - name: 🔍 Run Lighthouse CI
      run: |
        npm install -g @lhci/cli
        lhci autorun
      env:
        LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: front/package-lock.json

    - name: 📦 Install dependencies
      run: |
        cd front
        npm ci

    - name: 🔍 Run npm audit
      run: |
        cd front
        npm audit --audit-level=moderate || true

    - name: 🛡️ Run Snyk security scan
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high --file=front/package.json

  build-docker:
    name: 🐳 Docker Build
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐳 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🔑 Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: 🏗️ Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./front
        file: ./front/Dockerfile
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/izero-hunger-frontend:latest
          ${{ secrets.DOCKER_USERNAME }}/izero-hunger-frontend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-preview:
    name: 🚀 Deploy Preview
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        cache-dependency-path: front/package-lock.json

    - name: 📦 Install and build
      run: |
        cd front
        npm ci
        npm run build

    - name: 🌐 Deploy to Netlify (Preview)
      uses: nwtgck/actions-netlify@v2.0
      with:
        publish-dir: './front/dist'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
        enable-pull-request-comment: true
        enable-commit-comment: true
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  notify:
    name: 📢 Notifications
    runs-on: ubuntu-latest
    needs: [test, lighthouse, security, build-docker]
    if: always()

    steps:
    - name: 📧 Notify on success
      if: needs.test.result == 'success'
      run: |
        echo "✅ Frontend pipeline completed successfully!"
        echo "🧪 Tests: ${{ needs.test.result }}"
        echo "🔍 Lighthouse: ${{ needs.lighthouse.result }}"
        echo "🔒 Security: ${{ needs.security.result }}"
        echo "🐳 Docker: ${{ needs.build-docker.result }}"

    - name: ❌ Notify on failure
      if: needs.test.result == 'failure'
      run: |
        echo "❌ Frontend pipeline failed!"
        echo "Check the logs for more details."
        exit 1
